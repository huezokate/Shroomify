import React, { useState } from 'react';
import { ArrowRight, User, Mail, Lock } from 'lucide-react';

const ShroomifySignIn = () => {
  const [formData, setFormData] = useState({ email: '', password: '', name: '' });
  const [isLogin, setIsLogin] = useState(true);
  const [isSubmitted, setIsSubmitted] = useState(false);

  const handleSubmit = () => {
    if (formData.email && formData.password) {
      setIsSubmitted(true);
    }
  };

  if (isSubmitted) {
    return (
      <div className="min-h-screen bg-gray-900 text-white flex items-center justify-center">
        <div className="text-center">
          <div className="text-6xl mb-4">üçÑ</div>
          <h2 className="text-2xl font-bold text-purple-300 mb-2">Welcome to the Network!</h2>
          <p className="text-gray-400">Connecting you to the mycelium...</p>
          <div className="mt-4 w-12 h-1 bg-gradient-to-r from-purple-500 to-cyan-500 mx-auto rounded"></div>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gray-900 text-white flex flex-col">
      {/* Neon Header */}
      <div className="text-center py-12 relative overflow-hidden">
        <div className="absolute inset-0 bg-gradient-to-r from-purple-600/20 via-pink-600/20 to-cyan-400/20"></div>
        <div className="relative z-10">
          <div className="text-5xl font-bold mb-3">
            <span className="text-transparent bg-clip-text bg-gradient-to-r from-purple-400 via-pink-400 to-cyan-400">
              SHROOMIFY
            </span>
          </div>
          <div className="text-cyan-400 text-sm font-light tracking-widest uppercase">
            Growing the Natural Network
          </div>
          <div className="mt-6 text-7xl">üçÑ</div>
        </div>
      </div>

      {/* Form Container */}
      <div className="flex-1 px-6 py-8">
        <div className="max-w-sm mx-auto">
          <div className="text-center mb-10">
            <h2 className="text-3xl font-bold mb-3 text-white">
              {isLogin ? 'Welcome Back' : 'Join the Network'}
            </h2>
            <p className="text-gray-400">
              {isLogin ? 'Continue your growing journey' : 'Start your mushroom adventure'}
            </p>
          </div>

          <div className="space-y-6">
            {!isLogin && (
              <div>
                <label className="block text-sm font-semibold mb-3 text-purple-300">Name</label>
                <div className="relative">
                  <User className="absolute left-4 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5" />
                  <input
                    type="text"
                    className="w-full bg-gray-800/70 border border-purple-500/40 rounded-xl px-12 py-4 text-white placeholder-gray-500 focus:outline-none focus:border-purple-400 focus:ring-2 focus:ring-purple-400/30 transition-all"
                    placeholder="Your name"
                    value={formData.name}
                    onChange={(e) => setFormData(prev => ({ ...prev, name: e.target.value }))}
                  />
                </div>
              </div>
            )}

            <div>
              <label className="block text-sm font-semibold mb-3 text-purple-300">Email</label>
              <div className="relative">
                <Mail className="absolute left-4 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5" />
                <input
                  type="email"
                  className="w-full bg-gray-800/70 border border-purple-500/40 rounded-xl px-12 py-4 text-white placeholder-gray-500 focus:outline-none focus:border-purple-400 focus:ring-2 focus:ring-purple-400/30 transition-all"
                  placeholder="your@email.com"
                  value={formData.email}
                  onChange={(e) => setFormData(prev => ({ ...prev, email: e.target.value }))}
                />
              </div>
            </div>

            <div>
              <label className="block text-sm font-semibold mb-3 text-purple-300">Password</label>
              <div className="relative">
                <Lock className="absolute left-4 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5" />
                <input
                  type="password"
                  className="w-full bg-gray-800/70 border border-purple-500/40 rounded-xl px-12 py-4 text-white placeholder-gray-500 focus:outline-none focus:border-purple-400 focus:ring-2 focus:ring-purple-400/30 transition-all"
                  placeholder="‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢"
                  value={formData.password}
                  onChange={(e) => setFormData(prev => ({ ...prev, password: e.target.value }))}
                />
              </div>
            </div>

            <button
              onClick={handleSubmit}
              className="w-full bg-gradient-to-r from-purple-600 to-pink-600 text-white py-4 px-6 rounded-xl font-bold text-lg hover:from-purple-700 hover:to-pink-700 transition-all duration-300 flex items-center justify-center space-x-3 shadow-lg hover:shadow-purple-500/25"
            >
              <span>{isLogin ? 'Enter the Network' : 'Join the Network'}</span>
              <ArrowRight className="w-5 h-5" />
            </button>
          </div>

          <div className="text-center mt-8">
            <button
              onClick={() => setIsLogin(!isLogin)}
              className="text-cyan-400 hover:text-cyan-300 transition-colors font-medium"
            >
              {isLogin ? "Don't have an account? Sign up" : "Already have an account? Sign in"}
            </button>
          </div>
        </div>
      </div>

      {/* Network Pattern Footer */}
      <div className="h-24 relative overflow-hidden">
        <div className="absolute inset-0 bg-gradient-to-t from-purple-600/30 via-purple-600/10 to-transparent"></div>
        <div className="absolute bottom-6 left-1/2 transform -translate-x-1/2 text-center">
          <div className="text-xs text-gray-400 mb-1">üß¨ Connecting to Earth's Natural Internet</div>
          <div className="flex space-x-1">
            <div className="w-2 h-2 bg-purple-500 rounded-full animate-pulse"></div>
            <div className="w-2 h-2 bg-pink-500 rounded-full animate-pulse" style={{animationDelay: '0.2s'}}></div>
            <div className="w-2 h-2 bg-cyan-500 rounded-full animate-pulse" style={{animationDelay: '0.4s'}}></div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default ShroomifySignIn;